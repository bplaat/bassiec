class JanContext {
    @Get @Init Canvas *canvas;
    @Get int32_t width = -1;
    @Get int32_t height = -1;
    @Get int32_t dpi = -1;
    @Prop bool debug = false;
    @Prop @Free(JanFont_Free) JanFont *defaultFont = new JanFont(L"Segoe UI", JAN_UNIT(12, JAN_UNIT_TYPE_SP));

    void Resize(int32_t width, int32_t height, int32_t dpi);
    float ConvertUnit(JanUnit unit, float parentSize);
};

void JanContext::Resize(int32_t width, int32_t height, int32_t dpi) {
    this->width = width;
    this->height = height;
    this->dpi = dpi;
}

float JanContext::ConvertUnit(JanUnit unit, float parentSize) {
    if (unit.type == JAN_UNIT_TYPE_MATCH) return parentSize;
    if (unit.type == JAN_UNIT_TYPE_PX) return unit.value;
    if (unit.type == JAN_UNIT_TYPE_PT) return unit.value;
    if (unit.type == JAN_UNIT_TYPE_DP) return unit.value * ((float)this->dpi / 96);
    if (unit.type == JAN_UNIT_TYPE_SP) return unit.value; // TODO: How?
    if (unit.type == JAN_UNIT_TYPE_VW) return unit.value * ((float)this->width / 100);
    if (unit.type == JAN_UNIT_TYPE_VH) return unit.value * ((float)this->height / 100);
    if (unit.type == JAN_UNIT_TYPE_VMIN) return unit.value * ((float)MIN(this->width, this->height) / 100);
    if (unit.type == JAN_UNIT_TYPE_VMAX) return unit.value * ((float)MAX(this->width, this->height) / 100);
    if (unit.type == JAN_UNIT_TYPE_PERCENT) return unit.value * ((float)parentSize / 100);
    return 0;
}
